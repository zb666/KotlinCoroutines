import java.time.Clock
import java.time.Instant
import java.time.ZoneId

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: '../gradle/dependencies.gradle'
//apply plugin: 'buildtime'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.bod.kotlincoroutines"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //注意这里需要加 '' 单引号将其标明为一个字符串
        buildConfigField "String", "APP_URL", '"https://www.baidu.com/"'

        //resValue "String", "build_host", hostName()//产生res资源文件

        //gradle 站位 Key
        manifestPlaceholders = [
                "tencentValue"  : "MyName",
                GETUI_APP_ID    : "APP_ID",
                GETUI_APP_KEY   : "APP_KEY",
                GETUI_APP_SECRET: "APP_SECRET"
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        flavorDimensions('enviroment')
        eng {
//            dimension "channel"
            versionNameSuffix "$applicationId english suffix"
        }
    }

    println(versions.ui.image_picker + deps.out)


}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

def hostName() {
    return "http:api.brainco.tech"
}

task showLog {
    doFirst {
        println(' i am bob')
    }
    println("那你真的是和6啊")
    doLast {
        println(' you are so six ')
    }


}


//class SonTask extends showLog{
//
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'pub.devrel:easypermissions:3.0.0'
    //组合依赖
    implementation([
            'com.jakewharton.timber:timber:4.7.0'
    ])
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //jetpack'
    def paging_version = "1.0.0"

    implementation 'androidx.paging:paging-runtime:2.0.0'

    // alternatively - without Android dependencies for testing
    testImplementation 'androidx.paging:paging-common:2.0.0'

    // optional - RxJava support, currently in release candidate
    implementation "android.arch.paging:rxjava2:1.0.0-rc1"

    //jetpack
    implementation 'androidx.core:core-ktx:1.1.0'

    def lifecycle_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // Optional : Kotlin extension (https://d.android.com/kotlin/ktx)
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"

    // Koin for Android
    api "org.koin:koin-android:2.0.1"
// Koin Android Scope feature
    api "org.koin:koin-android-scope:2.0.1"
// Koin Android ViewModel feature
    api "org.koin:koin-android-viewmodel:2.0.1"

    //BRH
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.41'
    //AndroidUtil
//    implementation 'com.blankj:utilcodex:1.25.2'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-1'
    implementation("com.squareup.okhttp3:okhttp:4.1.0")
    api 'com.airbnb.android:lottie:3.0.0'

    api 'com.github.bumptech.glide:okhttp3-integration:4.5.0@aar'
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    api 'com.getui:sdk:2.13.3.0'

    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation 'com.blankj:utilcode:1.25.9'

    api 'com.squareup.retrofit2:retrofit:2.6.1'

    api 'com.squareup.retrofit2:converter-gson:2.4.0'
}


//project.gradle.addListener(new BuildTimeListener())
